#include <iostream>
using namespace std;

int main() {
    long long nomorKartu;
    cout << "Masukkan Nomor Kartu Digital: ";
    cin >> nomorKartu;

    int panjang = 0, duaDigitAwal, jumlahGanjil = 0, jumlahGenap = 0, totalGanjilDanGenap, digit, posisi = 1;
    long long temp = nomorKartu;

    while (temp >= 100) { 
        temp /= 10;
        panjang++;
    }

    if (temp < 100) {
        duaDigitAwal = temp; 
        panjang = panjang + 2; 
    }

    if (panjang == 14 && duaDigitAwal == 65) { 
        cout << "Tipe Kartu: NUSANTARA" << endl;
    }
    else if (panjang == 16 && (duaDigitAwal == 77 || duaDigitAwal == 78)) {
        cout << "Tipe Kartu: GARUDA" << endl;
    }
    else if (panjang == 15 && (duaDigitAwal == 91)) {
        cout << "Tipe Kartu: MERDEKA" << endl;
    }
    else {
        cout << "Tipe Kartu: TIDAK DITEMUKAN" << endl;
    }

    //Algoritma Validasi Nusantara
    while (nomorKartu > 0) {
        digit = nomorKartu % 10;

            if (posisi % 2 == 0) { 
            digit = digit * 2; 
                if (digit > 9) {
                    int angkaKanan = digit % 10;
                    int angkaKiri = digit / 10;
                    digit = angkaKanan + angkaKiri; 
                }
            jumlahGenap = jumlahGenap + digit;
        } 
        else { 
            jumlahGanjil = jumlahGanjil + digit; 
        } 
        nomorKartu = nomorKartu / 10; 
        posisi++; 
    }

    totalGanjilDanGenap = jumlahGanjil + jumlahGenap;
    if (totalGanjilDanGenap % 10 == 0) { 
        cout << "Nomor Kartu VALID" << endl;
    } 
    else {
        cout << "Nomor Kartu TIDAK VALID" << endl;
    }

    return 0;
}

/*
======================== PENJELASAN ALGORITMA/LOGIKA PROGRAM LENGKAP ========================

1. Program meminta pengguna memasukkan nomor kartu digital (biasanya 14-16 digit).
2. Menggunakan perulangan, dihitung panjang digit kartu dengan cara membagi angka
   terus-menerus dan menambahkan variabel panjang dengan satu setiap perulangan 
   hingga tersisa dua digit paling depan. Dua digit itu disimpan dalam variabel
   dan panjangnya lalu ditambah dua.
3. Berdasarkan dua digit awal dan panjang digit, ditentukan tipe kartu:
   - NUSANTARA (digit awal = 65 dan panjang 14 digit)
   - GARUDA (digit awal = 77 atau 78 dan panjang 16 digit)
   - MERDEKA (digit awal = 91 dan panjang 15 digit)
   - Jika tidak cocok, maka TIDAK DITEMUKAN.

4. Lalu dilakukan validasi nomor kartu menggunakan Algoritma Validasi Nusantara:
   Dengan menggunakan perulangan, setiap digit kartu diperiksa satu per satu.
   - Dimulai dari digit paling kanan (posisi 1), periksa tiap digit satu per satu.
   - Jika posisi digit adalah GENAP (2, 4, 6, dst):
     a. Kalikan digit dengan 2.
     b. Jika hasil > 9 (misalnya 2Ã—6 = 12), jumlahkan digit kanan dan kirinya
        -> 1 + 2 = 3, dengan cara menggunakan operator modulus dan pembagian untuk
        mendapatkan angka kanan dan kiri lalu dijumlahkan.
     c. Tambahkan ke variabel jumlahGenap.

   - Jika posisi digit adalah GANJIL (1, 3, 5, dst):
     a. Tambahkan langsung ke variabel jumlahGanjil.

   - Tambahkan posisi dengan 1 dan bagi variabel nomorKartu dengan 10 
     untuk menghilangkan digit paling kanan.
   Perulangan ini terus dilakukan hingga semua digit diproses.

5. Setelah semua digit diproses, jumlahkan variabel jumlahGenap dan jumlahGanjil.
6. Jika total tersebut habis dibagi 10, maka nomor kartu VALID.
   Jika tidak, maka TIDAK VALID.
*/